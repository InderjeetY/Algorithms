This program solves the matrix chain multiplication problem. It reads in the dimensions of a series of matrices and report the least expensive way to multiply them as a fully parenthesized product of matrices.
Input Format
Input should be given on standard input. It will start with a positive integer, n. This gives the number of matrices that are to be multiplied. This will be followed by n + 1 positive integers, one value per line. The first value is the height of the first matrix in the chain. The next value is the height of the second matrix (and also the width of the first matrix). This will continue up to the last value, which gives the width of the last matrix.
The input for the simple example we looked at in class would be given as:
7
3
8
4
6
6
9
2
5
Output
Print a single line of output (to standard out) giving fully parenthesized expression showing how the product should be computed in order to minimize computation cost. The names of the matrices will be written as M1 M2 ... Leave one space between matrices, parentheses and multiplication operators, and donâ€™t put parentheses around individual matrices or around the entire expression. The output for the example above should look like:
( M1 * ( M2 * ( M3 * ( M4 * ( M5 * M6 ) ) ) ) ) * M7
